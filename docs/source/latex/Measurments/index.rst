.. _ch:TexMeasurments:

********************
Συστήματα Μετρήσεων
********************

Όπως έχουμε ήδη αναφέρει, η LaTeX είναι ένα σύστημα μακροεντολών δομημένο 'πάνω' στη γλώσσα προγραμματισμού |tex|. Στο θέμα των μαθηματικών υπολογισμών δεν εισάγει κάποιο νέο σύστημα μετρήσεων αλλά χρησιμοποιεί αυτό του |tex|.

Ποιο είναι όμως αυτό το σύστημα μετρήσεων του |tex| και πως χρησιμοποιείται; Η απάντηση έχει βασικά δύο σκέλη. Το πρώτο αφορά στον τρόπο με τον οποίο το |tex| υπολογίζει απόστάσεις π.χ. πόσο θα απέχει η μία γραμμή κειμένου από την επόμενη ή ένας χαρακτήρας από τον επόμενο κ.λπ. και το δεύτερο στον τρόπο με τον οποίο 'καταμετρά' (ή 'απαριθμεί') ποσότητες π.χ. την αρίθμηση των κεφαλαίων, ενοτήτων κ.λπ.

Και στις δύο περιπτώσεις η |latex| χρησιμοποιεί ειδικές μεταβλητές που είναι ορισμένες στον πυρήνα του |tex| αλλά και στο δικό της. Οι μεταβλητές αυτές είναι ουσιαστικά περιοχές στη μνήμη του υπολογιστή στις οποίες είναι αποθηκευμένες κάποιες τιμές. Για το μεν υπολογισμό αποστάσεων λέγονται *registers* (ελλ. *καταχωρητές*) ενώ για την 'καταμέτρηση' ποσοτήτων, λέγονται *counters* (ελλ. *απαριθμητές* ή *καταμετρητές*). Για παράδειγμα, σχεδόν όλοι οι απαριθμητές είναι αρχικά μηδενισμένοι και αυξάνονται διαδοχικά με κάθε χρήση τους. Αντίστοιχα, όλοι οι καταχωρητές έχουν προεπιλεγμένες τιμές οι οποίες είτε ορίζονται στην κλάση εγγράφου [#]_ που θα επιλέξουμε, είτε έχουν ήδη προεπιλεγμένες τιμές, αποθηκευμένες στον πυρήνα των |tex|/|latex|.

Υπάρχουν εκατοντάδες έτοιμοι καταχωρητές και απαριθμητές, με συγκεκριμένα ονόματα (για να μπορεί εύκολα ο χρήστης να τους διαχειρίζεται) και δεδομένες αρχικές τιμές. Ο χρήστης μπορεί να προσαρμόσει αυτές τις τιμές όπως θέλει (π.χ. να τις αυξήσει) χρησιμοποιώντας κατάλληλες εντολές. Επίσης, ο χρήστης, μπορεί να δημιουργήσει δικές του νέες μεταβλητές, χρησιμοποιώντας κατάλληλες εντολές. Θα δούμε πως στη συνέχεια.

Οι καταχωρητές και απαριθμητές μοιάζουν με εντολές, γιατί πριν από το όνομά τους προηγείται ο χαρακτήρας ( :term:`\\` ). Στην πραγματικότητα όμως **δεν** είναι εντολές αλλά απλά μία τιμή. Γι αυτό και μπορείτε να χρησιμοποιήσετε καταχωρητές (ή απαριθμητές) σαν ορίσματα εντολών κάτι που στον αρχάριο χρήστη μπορεί να δημιουργήσει σύγχυση. Για παράδειγμα στην παρακάτω έκφραση::

  \setlength{\parskip}{10pt plus 1pt minus 1pt}

η ``\setlength`` είναι εντολή διαχείρσης μήκους (αλλάζει την τιμή ενός συγκεκριμένου μήκους). Η ``\parskip`` αν και μοιάζει, δεν είναι εντολή αλλά μήκος (συγκεκριμένα η απόσταση μεταξύ παραγράφων). Η τιμή αυτού του μήκους ορίζεται στην κλάση του εγγράφου που χρησιμοποιούμε (μπορεί π.χ. να είναι από προεπιλογή `5pt`). Συνεπώς, μη σας παραξενεύει η παραπάνω σύνταξη η οποία απλά σημαίνει: 'θέσε το μήκος ``\parskip`` ίσο με ``10pt plus 1pt minus 1pt``' (το τελευταίο είναι ένα :ref:`ελαστικό μήκος <sec:TexRubberLength>` όπως θα δούμε στη συνέχεια). 

Για να έχουν νόημα όλα τα παραπάνω χρειάζεται και κάποιο σύστημα αρίθμησης που να δίνει υπόσταση στις μετρήσεις. Στα μέτρηση αποστάσεων χρησιμοποιούνται ειδικές :ref:`μονάδες μέτρησης <sec:TexLengthUnits>` όπως `mm` (χιλιοστά) ή `pt` (points, σημεία) στη δε απαρίθμηση οι ακέραιοι αριθμοί και μάλιστα μεγάλου μεγέθους (long integers, από :math:`- 2^{31}` έως :math:`2^{31} - 1`).

Έχοντας μία γενική εικόνα για τον τρόπο που τα |tex|/|latex| καταμετρούν αποστάσεις και ποσότητες, ας δούμε πιο αναλυτικά τις βασικές εμπλεκόμενες έννοιες. 



.. sec:TexLengthUnits:

Μονάδες Μέτρησης Aποστάσεων
=============================

Οι μονάδες μέτρησης που φαίνονται στον :numref:`tab:TexUnits` αναγνωρίζονται αυτόματα από το |tex|. 

.. list-table:: Μονάδες μήκους που υποστηρίζονται από τη reST.
   :name: tab:TexUnits
   :header-rows: 1
   :stub-columns: 1
   :width: 100%
   :widths: 10, 15, 30, 45

   * - Μονάδα
     - Όνομα
     - Ορισμός
     - Παρατηρήσεις

   * - `pt`
     - point
     - 1 pt = 1/72 in
     - TeX point (ελλ. "σημείο")

   * - `in`
     - inch
     - 1 in = 2.54 cm = 25.4 mm = 96 px
     - Μία ίντσα

   * - `mm`
     - milimeter
     - 1 mm = 1/1000 m = 2.845 pt
     - Ένα χιλιοστό του μέτρου

   * - `cm`
     - centimeter
     - 1 cm = 1/100 m = 10 mm
     - Ένα εκατοστό του μέτρου

   * - `em`
     - em unit
     - 1 em = 1 :term:`quad`
     - Τυπικά, το πλάτος του κεφαλαίου `M` (αγγλικό), της τρέχουσας γραμματοσειράς. Σήμερα αυτό εξαρτάται από το σχεδιαστή της γραμματοσειράς. Είναι σχετικό μέγεθος

   * - `ex`
     - ex unit
     - 
     - Το 'ύψος' του γράμματος `x` (αγγλικό), της τρέχουσας γραμματοσειράς. Είναι επίσης σχετικό μέγεθος.

   * - `sp`
     - scaled point
     - 1 sp = 65536 pt
     - 

   * - `bp`
     - big point
     - 72 bp = 1 in
     - Αλλιώς 'PostScript Point'

   * - `dd`
     - ditot point
     - 1 dd = 0.376 mm
     - 

   * - `pc`
     - pica
     - 1 pc = 1/6 in = 12 pt
     - Ελληνικά "πίκα"

   * - `cc`
     - cicero
     - 1 cc = 12 dd
     - 

   * - `mu`
     - math unit
     - 18 mu = 1 em
     - 

Από τις παραπάνω μονάδες, οι `sp`, `bp`, `dd`, `pc`, `cc` και `mu`, σπάνια χρησιμοποιούνται από τον απλό χρήστη, χρησιμοποιούνται στην επαγγκελματική τυπογραφία.

Οι μονάδες `em` και `ex` είναι 'σχετικές' μονάδες (και όχι απόλυτες) με την έννοια ότι καθορίζονται από το σχεδιαστή της γραμματοσειράς που χρησιμοποιούμε, ο οποίος συνήθως τις συσχετίζει με κάποιο άλλο μέγεθος. Παλαιότερα, αν και χρησιμοποιείται ακόμη στην πράξη από τους σχεδιαστές, οι συγκεκριμένες μονάδες αντιστοιχούσαν στο πλάτος του αγγλικού γράμματος `M` (το em) και στο ύψος του αγγλικού γράμματος `x` (το ex). Η σημασία τους έγκειται στο ότι εισάγουν αποστάσεις σχετικές με τις υπόλοιπες αποστάσεις στη γραμματοσειρά, κάτι που πολλές φορές παράγει πολύ καλό οπτικό αποτέλεσμα.

Οι μονάδες `cm`, `mm` και `in` είναι οι γνωστές, απόλυτες, μονάδες μέτρησης.

Το `pt` είναι ειδική μονάδα μέτρησης που χρησιμοποιείται στο |tex| που προέκυψε μετά από μελέτες στην στοιχειοθεσία.

Προτείνεται η χρήση των πρώτων έξι μονάδων σε σύνηθες κείμενο (text mode) και της τελευταίας σε μαθηματικό (math mode).



.. sec:TexLengths:

Μήκη (Lengths)
===================

Με τις παραπάνω μονάδες μέτρησης μήκους μπορούμε να ορίσουμε ένα :index:`μήκος <see: μήκος ; length>`. Ένα μήκος είναι ένας τρόπος μέτρησης της απόστασης και έχει τη γενική μορφή π.χ. `3cm`, δηλαδή ένας αριθμός ακολουθούμενος από μία μονάδα μέτρησης. Πολλές εντολές της |latex| έχουν μήκη σαν ορίσματα.

.. note::

   Δεν πρέπει να αφήνετε κενό μεταξύ του αριθμού και της μονάδας μήκους. Η έκφραση `3 cm` είναι λάθος, η σωστή είναι `3cm`.
   
Τα μήκη χρησιμοποιούνται σχεδόν παντού στη |latex| γιατί όπως είπαμε αυτά καθορίζουν το που θα τοποθετηθεί τι. Τα μήκη στη |latex| είναι δύο ειδών, τα 'άκαμπτα' και τα 'ελαστικά'. Η διαφορά τους είναι ότι το |tex| αποφασίζει αν θα επιμηκύνει ή σμικρύνει τα ελαστικά μήκη, κάτι που δεν ισχύει για τα άκαμπτα (τα χρησιμοποιεί όπως είναι).


.. sec:TexRigidLength:

'Άκαμπτο' Μήκος (Rigid Length)
--------------------------------------------------------

Ένα :index:`άκαμπτο μήκος <see: άκαμπτο μήκος ; rigid length>` έχει τη μορφή π.χ.::

  3cm
  
δηλαδή ένας αριθμός ακολουθούμενος από μία μονάδα μέτρησης (cm), που δηλώνει ακριβώς αυτό --- ένα μήκος τριών εκατοστών και τίποτε άλλο.

.. note::

   Σε pure TeX το rigid μήκος λέγεται **dimen**

Ένα τέτοιο μήκος είναι σταθερό (ή 'άκαμπτο') γιατί καταρχάς, το |tex| δεν πρόκειται να το αλλάξει ποτέ, αν δεν πάρει σχετικές οδηγίες και, κατά δεύτερο λόγο, για να ξεχωρίζει από τον άλλο τύπο μήκους, το 'ελαστικό' μήκος.


.. sec:TexRubberLength:

'Ελαστικό μήκος' (Rubber Length)
-----------------------------------

Ένα :index:`ελαστικό μήκος <see: ελαστικό μήκος ; rubber length>` (που πολλές φορές θα συναντήσετε να αποκαλείται και :index:`glue <see: glue ; rubber length>`) έχει τη μορφή π.χ.::

  3cm plus 0.05cm minus 0.01cm

.. note::

   Σε pure TeX το rubber μήκος λέγεται **skip**

   Παρατηρήστε επίσης τη σύνταξη ενός ελαστικού μήκους: 'μήκος--κενό--plus--κενό--μήκος--κενό--minus--κενό--μήκος'. Προσέξτε τη χρήση των κενών. 

Στην παραπάνω μορφή παρατηρήστε ότι ελαστικό μήκος αποτελείται από ένα σταθερό μήκος (3cm), *συν* ένα μήκος (0.05cm), *μείον* ένα μήκος (0.01cm). Η μορφή αυτή έχει την έννοια ότι το σταθερό μήκος μπορεί είτε να επιμηκυνθεί (ή επεκταθεί, stretch) κατά το *συν* μήκος (π.χ. `plus 0.05cm`) είτε να σμικρυνθεί (ή συρρικνωθεί, shrink) κατά το *μείον* μήκος (π.χ. `minus 0.01cm`).

Αυτή η μορφή δήλωσης απόστάσεων είναι ίσως μοναδική στη |latex| αλλά και ο βασικός λόγος των εξαιρετικών αποτελεσμάτων στοιχειοθεσίας. Οι αλγόριθμοι του |tex| συνεχώς παίρνουν αποφάσεις αν πρέπει να διατηρήσουν σταθερό ένα μήκος ή να το επιμηκύνουν (stretch) ή να το σμικρύνουν (shrink), προκειμένουν να πετύχουν τη βέλτιστη τοποθέτηση ενός στοιχείου (από έναν απλό χαρακτήρα σε μία γραμμή έως έναν πίνακα σε μία σελίδα).

Ένα ελαστικό μέγεθος δεν είναι υποχρεωτικό να περιλαμβάνει και τα δύο στοιχεία επέκτασης / σμίκρυνσης, αλλά μόνο το ένα. Αυτό σημαίνει ότι δίνουμε στο |tex| οδηγίες, αν είναι απαραίτητο, να επεκτείνει (ή να σμικρύνει) ένα μήκος, αλλά όχι το αντίθετο.



.. sec:TexLengthRegisters:

Καταχωρητές (Registers)
==================================

Όλοι οι καταχωρητές (registers) έχουν αρχικά αποθηκευμένο κάποιο μήκος. Το μήκος αυτό είναι εκφρασμένο σε κάποια από τις μονάδες μήκους του :numref:`tab:TexUnits` (κατά βάση σε `pt`). Αυτό το μήκος ή αλλιώς *αρχική τιμή* (default value) Οι αρχικές τιμές τους ορίζονται στην κλάση του εγγράφου που θα χρησιμοποιήσουμε (αν ψάξετε στο αντίστοιχο `.cls` αρχείο θα τις βρείτε). Αν και δεν είναι ορθό, θα συναντήσετε να χρησιμοποιείται ο όρος *εντολή μήκους* (length command) αντί του *καταχωρητή* (το κάνουμε και εμείς στο βιβλίο). Ο λόγος είναι ότι και οι καταχωρητές εισάγονται με το χαρακτήρα backslash ( :term:`\\` ) πριν το όνομά τους. Η διαφορά με τις εντολές είναι ότι οι καταχωρητές είναι απλά περιοχές στη μνήμη στις οποίες αποθηκεύονται κάποιες τιμές. Το όνομα ενός καταχωρητή (ή αυτό που λέμε *εντολή μήκους*) είναι απλά το όνομα της μεταβλητής με την οποία ο χρήστης έχει πρόσβαση στην αποθηκευμένη τιμή. Αν δεν καταλάβατε τα παραπάνω, θα γίνουν πιο κατανοητά στη συνέχεια.

Υπάρχουν δεκάδες τέτοιοι καταχωρητές, καταχωρημένοι στον πυρήνα τόσο του |tex| όσο και της |latex|. Αυτοί σημαίνει ότι είναι έτοιμοι και διαθέσιμοι για χρήση. Για παράδειγμα, η προεπιλεγμένη εσοχή που θα έχει κάθε παράγραφος στο έγγραφό μας, προσδιορίζεται από τον καταχωρητή :term:`\\parindent <parindent>`. `parindent` είναι το όνομα του καταχωρητή και όταν θέλουμε να τον χρησιμοποιήσουμε (π.χ. για να αλλάξουμε την τιμή του) χρησιμοποιούμε ακριβώς πριν το όνομα το backslash ( :term:`\\` ), σα να ήταν εντολή.

Στον :numref:`tab:TexLengthRegisters` φαίνονται (μερικοί μόνο)  από τους υπάρχοντες καταχωρητές. Σε άλλες ενότητες και κεφάλαια του βιβλίου θα αναφέρουμε και άλλους, σχετικούς με τα αντίστοιχα αντικείμενα.

.. figure:: ../images/pagelayout.png
   :width: 100%
   :name: img:PageLayout
   :alt: Page Layout

   Τυπική διάταξη σελίδας με βασικές παραμέτρους.


.. list-table:: Βασικοί καταχωρητές μήκους (ενσωματωμένοι).
   :name: tab:TexLengthRegisters
   :header-rows: 1
   :width: 100%
   :widths: 20, 30, 20, 30

   * - Register
     - Περιγραφή
     - Register
     - Περιγραφή

   * - :term:`\\linewidth <linewidth>`
     - Το πλάτος μίας γραμμής στο τρέχον περιβάλλον.
     - :term:`\\unitlength <unitlength>`
     - Η μονάδα μέτρησης σε περιβάλλον :term:`picture`
   
   * - :term:`\\baselineskip <baselineskip>`
     - Η ελάχιστη κάθετη απόσταση μεταξύ γραμμών (baseline to baseline). Στα ελληνικά είναι το *διάστιχο*.
     - :term:`\\baselinestretch <baselinestretch>`
     - Συντελεστής με τον οποίο πολλαπλασιάζεται πάντα το :term:`\\baselineskip <baselineskip>`.

   * - :term:`\\columnsep <columnsep>`
     - Η απόσταση μεταξύ στηλών κειμένου (σε κείμενα περισσοτέρων της μίας στήλης)
     - :term:`\\columnwidth <columnwidth>`
     - Το πλάτος μίας στήλης κειμένου (σε κείμενα περισσοτέρων της μίας στήλης)

   * - :term:`\\evensidemargin <evensidemargin>`
     - Το πλάτος περιθωρίου σε ζυγές σελίδες
     - :term:`\\oddsidemargin <oddsidemargin>`
     - Το πλάτος περιθωρίου σε μονές σελίδες
   
   * - :term:`\\paperwidth <paperwidth>`
     - Το πλάτος της σελίδας
     - :term:`\\paperheight <paperheight>`
     - Το ύψος της σελίδας
   
   * - :term:`\\textwidth <textwidth>`
     - Το πλάτος του τρέχοντος κειμένου μέσα στη σελίδα (το 8 στην :numref:`img:PageLayout`).
     - :term:`\\textheight <textheight>`
     - Το ύψος του τρέχοντος κειμένου μέσα στη σελίδα (το 7 στην :numref:`img:PageLayout`).

   * - :term:`\\parskip <parskip>`
     - Επιπλέον κάθετο διάστημα μεταξύ παραγράφων.
     - :term:`\\parindent <parindent>`
     - Η τυπική εσοχή μίας παραγράφου

   * - :term:`\\topmargin <topmargin>`
     - Το 'ύψος' του άνω περιθωρίου σελίδας.
     - :term:`\\headheight <headheight>`
     - Το ύψος του κουτιού που φιλοξενεί την τρέχουσα επικεφαλίδα (header, το 5 στην :numref:`img:PageLayout`).

Η |latex| μας πρέχει μία σειρά από εντολές για τη διαχείριση των καταχωρητών μήκους. Αυτές είναι οι:

:term:`\\newlength <newlength>`
  Με τη συγκεκριμένη εντολή δημιουργούμε έναν νέο καταχωρητή μήκους. Η γενική μορφή είναι::

    \newlength{\<NewLength>}

  όπου:
    - το `NewLength` είναι το όνομα του νέου καταχωρητή που το δίνουμε εμείς,
    - πρέπει να προηγείται ο χαρακτήρας `\\` πριν το όνομα,
    - το όνομα πρέπει να είναι μοναδικό.
  Σημειώστε ότι αυτή η εντολή είναι εντολή     
- :term:`\\setlength <setlength>`
- :term:`\\addtolength <addtolength>`
- :term:`\\addtodepth <addtodepth>`
- :term:`\\addtoheight <addtoheight>`
- :term:`\\addtowidth <addtowidth>`




.. only:: html

.. rubric:: Υποσημειώσεις

.. [#] Αυτός είναι ένας από τους λόγους που η |latex| ψάχνει πρώτα να βρει την κλάση εγγράφου και μετά επεξεργάζεται το ίδιο το έγγραφο.